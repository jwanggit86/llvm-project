; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=gfx900 < %s | FileCheck -check-prefixes=GFX9 %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=gfx1010 < %s | FileCheck -check-prefixes=GFX10 %s

;
; These functions all should have the attribute amdgpu-no-flat-scratch-init set if the AMDGPUAttributor
; pass is run. Therefore the purpose is to test llc when the attribute is incorrectly missing.
;
;; tests of addrspacecast

define void @without_private_to_flat_addrspacecast(ptr addrspace(5) %ptr) {
; GFX9-LABEL: without_private_to_flat_addrspacecast:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v1, 0
; GFX9-NEXT:    buffer_store_dword v1, v0, s[0:3], 0 offen
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX10-LABEL: without_private_to_flat_addrspacecast:
; GFX10:       ; %bb.0:
; GFX10-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX10-NEXT:    v_mov_b32_e32 v1, 0
; GFX10-NEXT:    buffer_store_dword v1, v0, s[0:3], 0 offen
; GFX10-NEXT:    s_waitcnt_vscnt null, 0x0
; GFX10-NEXT:    s_setpc_b64 s[30:31]
  store volatile i32 0, ptr addrspace(5) %ptr
  ret void
}

define amdgpu_kernel void @without_private_to_flat_addrspacecast_cc_kernel(ptr addrspace(5) %ptr) {
; GFX9-LABEL: without_private_to_flat_addrspacecast_cc_kernel:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_mov_b64 s[22:23], s[2:3]
; GFX9-NEXT:    s_mov_b64 s[20:21], s[0:1]
; GFX9-NEXT:    s_load_dword s0, s[8:9], 0x0
; GFX9-NEXT:    s_add_u32 s20, s20, s17
; GFX9-NEXT:    s_addc_u32 s21, s21, 0
; GFX9-NEXT:    v_mov_b32_e32 v0, 0
; GFX9-NEXT:    s_waitcnt lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v1, s0
; GFX9-NEXT:    buffer_store_dword v0, v1, s[20:23], 0 offen
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    s_endpgm
;
; GFX10-LABEL: without_private_to_flat_addrspacecast_cc_kernel:
; GFX10:       ; %bb.0:
; GFX10-NEXT:    s_mov_b64 s[22:23], s[2:3]
; GFX10-NEXT:    s_mov_b64 s[20:21], s[0:1]
; GFX10-NEXT:    s_load_dword s0, s[8:9], 0x0
; GFX10-NEXT:    v_mov_b32_e32 v0, 0
; GFX10-NEXT:    s_add_u32 s20, s20, s17
; GFX10-NEXT:    s_addc_u32 s21, s21, 0
; GFX10-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-NEXT:    v_mov_b32_e32 v1, s0
; GFX10-NEXT:    buffer_store_dword v0, v1, s[20:23], 0 offen
; GFX10-NEXT:    s_waitcnt_vscnt null, 0x0
; GFX10-NEXT:    s_endpgm
  store volatile i32 0, ptr addrspace(5) %ptr
  ret void
}

define void @call_without_private_to_flat_addrspacecast(ptr addrspace(5) %ptr) {
; GFX9-LABEL: call_without_private_to_flat_addrspacecast:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    s_mov_b32 s18, s33
; GFX9-NEXT:    s_mov_b32 s33, s32
; GFX9-NEXT:    s_xor_saveexec_b64 s[16:17], -1
; GFX9-NEXT:    buffer_store_dword v2, off, s[0:3], s33 ; 4-byte Folded Spill
; GFX9-NEXT:    s_mov_b64 exec, s[16:17]
; GFX9-NEXT:    s_addk_i32 s32, 0x400
; GFX9-NEXT:    s_getpc_b64 s[16:17]
; GFX9-NEXT:    s_add_u32 s16, s16, without_private_to_flat_addrspacecast@gotpcrel32@lo+4
; GFX9-NEXT:    s_addc_u32 s17, s17, without_private_to_flat_addrspacecast@gotpcrel32@hi+12
; GFX9-NEXT:    s_load_dwordx2 s[16:17], s[16:17], 0x0
; GFX9-NEXT:    v_writelane_b32 v2, s30, 0
; GFX9-NEXT:    v_writelane_b32 v2, s31, 1
; GFX9-NEXT:    s_waitcnt lgkmcnt(0)
; GFX9-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; GFX9-NEXT:    v_readlane_b32 s31, v2, 1
; GFX9-NEXT:    v_readlane_b32 s30, v2, 0
; GFX9-NEXT:    s_mov_b32 s32, s33
; GFX9-NEXT:    s_xor_saveexec_b64 s[4:5], -1
; GFX9-NEXT:    buffer_load_dword v2, off, s[0:3], s33 ; 4-byte Folded Reload
; GFX9-NEXT:    s_mov_b64 exec, s[4:5]
; GFX9-NEXT:    s_mov_b32 s33, s18
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX10-LABEL: call_without_private_to_flat_addrspacecast:
; GFX10:       ; %bb.0:
; GFX10-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX10-NEXT:    s_mov_b32 s18, s33
; GFX10-NEXT:    s_mov_b32 s33, s32
; GFX10-NEXT:    s_xor_saveexec_b32 s16, -1
; GFX10-NEXT:    buffer_store_dword v2, off, s[0:3], s33 ; 4-byte Folded Spill
; GFX10-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-NEXT:    s_mov_b32 exec_lo, s16
; GFX10-NEXT:    s_addk_i32 s32, 0x200
; GFX10-NEXT:    s_getpc_b64 s[16:17]
; GFX10-NEXT:    s_add_u32 s16, s16, without_private_to_flat_addrspacecast@gotpcrel32@lo+4
; GFX10-NEXT:    s_addc_u32 s17, s17, without_private_to_flat_addrspacecast@gotpcrel32@hi+12
; GFX10-NEXT:    v_writelane_b32 v2, s30, 0
; GFX10-NEXT:    s_load_dwordx2 s[16:17], s[16:17], 0x0
; GFX10-NEXT:    v_writelane_b32 v2, s31, 1
; GFX10-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; GFX10-NEXT:    v_readlane_b32 s31, v2, 1
; GFX10-NEXT:    v_readlane_b32 s30, v2, 0
; GFX10-NEXT:    s_mov_b32 s32, s33
; GFX10-NEXT:    s_xor_saveexec_b32 s4, -1
; GFX10-NEXT:    buffer_load_dword v2, off, s[0:3], s33 ; 4-byte Folded Reload
; GFX10-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-NEXT:    s_mov_b32 exec_lo, s4
; GFX10-NEXT:    s_mov_b32 s33, s18
; GFX10-NEXT:    s_waitcnt vmcnt(0)
; GFX10-NEXT:    s_setpc_b64 s[30:31]
  call void @without_private_to_flat_addrspacecast(ptr addrspace(5) %ptr)
  ret void
}

define amdgpu_kernel void @call_without_private_to_flat_addrspacecast_cc_kernel(ptr addrspace(5) %ptr) {
; GFX9-LABEL: call_without_private_to_flat_addrspacecast_cc_kernel:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_add_u32 flat_scratch_lo, s12, s17
; GFX9-NEXT:    s_addc_u32 flat_scratch_hi, s13, 0
; GFX9-NEXT:    s_add_u32 s0, s0, s17
; GFX9-NEXT:    s_addc_u32 s1, s1, 0
; GFX9-NEXT:    s_load_dword s17, s[8:9], 0x0
; GFX9-NEXT:    s_add_u32 s8, s8, 8
; GFX9-NEXT:    s_addc_u32 s9, s9, 0
; GFX9-NEXT:    s_mov_b32 s13, s15
; GFX9-NEXT:    s_mov_b32 s12, s14
; GFX9-NEXT:    s_getpc_b64 s[14:15]
; GFX9-NEXT:    s_add_u32 s14, s14, without_private_to_flat_addrspacecast@gotpcrel32@lo+4
; GFX9-NEXT:    s_addc_u32 s15, s15, without_private_to_flat_addrspacecast@gotpcrel32@hi+12
; GFX9-NEXT:    s_load_dwordx2 s[18:19], s[14:15], 0x0
; GFX9-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; GFX9-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; GFX9-NEXT:    v_or3_b32 v31, v0, v1, v2
; GFX9-NEXT:    s_mov_b32 s14, s16
; GFX9-NEXT:    s_waitcnt lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v0, s17
; GFX9-NEXT:    s_mov_b32 s32, 0
; GFX9-NEXT:    s_swappc_b64 s[30:31], s[18:19]
; GFX9-NEXT:    s_endpgm
;
; GFX10-LABEL: call_without_private_to_flat_addrspacecast_cc_kernel:
; GFX10:       ; %bb.0:
; GFX10-NEXT:    s_add_u32 s12, s12, s17
; GFX10-NEXT:    s_mov_b32 s32, 0
; GFX10-NEXT:    s_addc_u32 s13, s13, 0
; GFX10-NEXT:    s_setreg_b32 hwreg(HW_REG_FLAT_SCR_LO), s12
; GFX10-NEXT:    s_setreg_b32 hwreg(HW_REG_FLAT_SCR_HI), s13
; GFX10-NEXT:    s_add_u32 s0, s0, s17
; GFX10-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-NEXT:    s_load_dword s17, s[8:9], 0x0
; GFX10-NEXT:    s_add_u32 s8, s8, 8
; GFX10-NEXT:    s_addc_u32 s9, s9, 0
; GFX10-NEXT:    s_mov_b32 s13, s15
; GFX10-NEXT:    s_mov_b32 s12, s14
; GFX10-NEXT:    s_getpc_b64 s[14:15]
; GFX10-NEXT:    s_add_u32 s14, s14, without_private_to_flat_addrspacecast@gotpcrel32@lo+4
; GFX10-NEXT:    s_addc_u32 s15, s15, without_private_to_flat_addrspacecast@gotpcrel32@hi+12
; GFX10-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; GFX10-NEXT:    s_load_dwordx2 s[18:19], s[14:15], 0x0
; GFX10-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; GFX10-NEXT:    s_mov_b32 s14, s16
; GFX10-NEXT:    v_or3_b32 v31, v0, v1, v2
; GFX10-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-NEXT:    v_mov_b32_e32 v0, s17
; GFX10-NEXT:    s_swappc_b64 s[30:31], s[18:19]
; GFX10-NEXT:    s_endpgm
  call void @without_private_to_flat_addrspacecast(ptr addrspace(5) %ptr)
  ret void
}

define void @call_call_without_private_to_flat_addrspacecast(ptr addrspace(5) %ptr) {
; GFX9-LABEL: call_call_without_private_to_flat_addrspacecast:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    s_mov_b32 s19, s33
; GFX9-NEXT:    s_mov_b32 s33, s32
; GFX9-NEXT:    s_xor_saveexec_b64 s[16:17], -1
; GFX9-NEXT:    buffer_store_dword v3, off, s[0:3], s33 ; 4-byte Folded Spill
; GFX9-NEXT:    s_mov_b64 exec, s[16:17]
; GFX9-NEXT:    s_addk_i32 s32, 0x400
; GFX9-NEXT:    s_getpc_b64 s[16:17]
; GFX9-NEXT:    s_add_u32 s16, s16, call_without_private_to_flat_addrspacecast@gotpcrel32@lo+4
; GFX9-NEXT:    s_addc_u32 s17, s17, call_without_private_to_flat_addrspacecast@gotpcrel32@hi+12
; GFX9-NEXT:    s_load_dwordx2 s[16:17], s[16:17], 0x0
; GFX9-NEXT:    v_writelane_b32 v3, s30, 0
; GFX9-NEXT:    v_writelane_b32 v3, s31, 1
; GFX9-NEXT:    s_waitcnt lgkmcnt(0)
; GFX9-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; GFX9-NEXT:    v_readlane_b32 s31, v3, 1
; GFX9-NEXT:    v_readlane_b32 s30, v3, 0
; GFX9-NEXT:    s_mov_b32 s32, s33
; GFX9-NEXT:    s_xor_saveexec_b64 s[4:5], -1
; GFX9-NEXT:    buffer_load_dword v3, off, s[0:3], s33 ; 4-byte Folded Reload
; GFX9-NEXT:    s_mov_b64 exec, s[4:5]
; GFX9-NEXT:    s_mov_b32 s33, s19
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX10-LABEL: call_call_without_private_to_flat_addrspacecast:
; GFX10:       ; %bb.0:
; GFX10-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX10-NEXT:    s_mov_b32 s19, s33
; GFX10-NEXT:    s_mov_b32 s33, s32
; GFX10-NEXT:    s_xor_saveexec_b32 s16, -1
; GFX10-NEXT:    buffer_store_dword v3, off, s[0:3], s33 ; 4-byte Folded Spill
; GFX10-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-NEXT:    s_mov_b32 exec_lo, s16
; GFX10-NEXT:    s_addk_i32 s32, 0x200
; GFX10-NEXT:    s_getpc_b64 s[16:17]
; GFX10-NEXT:    s_add_u32 s16, s16, call_without_private_to_flat_addrspacecast@gotpcrel32@lo+4
; GFX10-NEXT:    s_addc_u32 s17, s17, call_without_private_to_flat_addrspacecast@gotpcrel32@hi+12
; GFX10-NEXT:    v_writelane_b32 v3, s30, 0
; GFX10-NEXT:    s_load_dwordx2 s[16:17], s[16:17], 0x0
; GFX10-NEXT:    v_writelane_b32 v3, s31, 1
; GFX10-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; GFX10-NEXT:    v_readlane_b32 s31, v3, 1
; GFX10-NEXT:    v_readlane_b32 s30, v3, 0
; GFX10-NEXT:    s_mov_b32 s32, s33
; GFX10-NEXT:    s_xor_saveexec_b32 s4, -1
; GFX10-NEXT:    buffer_load_dword v3, off, s[0:3], s33 ; 4-byte Folded Reload
; GFX10-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-NEXT:    s_mov_b32 exec_lo, s4
; GFX10-NEXT:    s_mov_b32 s33, s19
; GFX10-NEXT:    s_waitcnt vmcnt(0)
; GFX10-NEXT:    s_setpc_b64 s[30:31]
  call void @call_without_private_to_flat_addrspacecast(ptr addrspace(5) %ptr)
  ret void
}

define amdgpu_kernel void @call_call_without_private_to_flat_addrspacecast_cc_kernel(ptr addrspace(5) %ptr) {
; GFX9-LABEL: call_call_without_private_to_flat_addrspacecast_cc_kernel:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_add_u32 flat_scratch_lo, s12, s17
; GFX9-NEXT:    s_addc_u32 flat_scratch_hi, s13, 0
; GFX9-NEXT:    s_add_u32 s0, s0, s17
; GFX9-NEXT:    s_addc_u32 s1, s1, 0
; GFX9-NEXT:    s_load_dword s17, s[8:9], 0x0
; GFX9-NEXT:    s_add_u32 s8, s8, 8
; GFX9-NEXT:    s_addc_u32 s9, s9, 0
; GFX9-NEXT:    s_mov_b32 s13, s15
; GFX9-NEXT:    s_mov_b32 s12, s14
; GFX9-NEXT:    s_getpc_b64 s[14:15]
; GFX9-NEXT:    s_add_u32 s14, s14, call_without_private_to_flat_addrspacecast@gotpcrel32@lo+4
; GFX9-NEXT:    s_addc_u32 s15, s15, call_without_private_to_flat_addrspacecast@gotpcrel32@hi+12
; GFX9-NEXT:    s_load_dwordx2 s[18:19], s[14:15], 0x0
; GFX9-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; GFX9-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; GFX9-NEXT:    v_or3_b32 v31, v0, v1, v2
; GFX9-NEXT:    s_mov_b32 s14, s16
; GFX9-NEXT:    s_waitcnt lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v0, s17
; GFX9-NEXT:    s_mov_b32 s32, 0
; GFX9-NEXT:    s_swappc_b64 s[30:31], s[18:19]
; GFX9-NEXT:    s_endpgm
;
; GFX10-LABEL: call_call_without_private_to_flat_addrspacecast_cc_kernel:
; GFX10:       ; %bb.0:
; GFX10-NEXT:    s_add_u32 s12, s12, s17
; GFX10-NEXT:    s_mov_b32 s32, 0
; GFX10-NEXT:    s_addc_u32 s13, s13, 0
; GFX10-NEXT:    s_setreg_b32 hwreg(HW_REG_FLAT_SCR_LO), s12
; GFX10-NEXT:    s_setreg_b32 hwreg(HW_REG_FLAT_SCR_HI), s13
; GFX10-NEXT:    s_add_u32 s0, s0, s17
; GFX10-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-NEXT:    s_load_dword s17, s[8:9], 0x0
; GFX10-NEXT:    s_add_u32 s8, s8, 8
; GFX10-NEXT:    s_addc_u32 s9, s9, 0
; GFX10-NEXT:    s_mov_b32 s13, s15
; GFX10-NEXT:    s_mov_b32 s12, s14
; GFX10-NEXT:    s_getpc_b64 s[14:15]
; GFX10-NEXT:    s_add_u32 s14, s14, call_without_private_to_flat_addrspacecast@gotpcrel32@lo+4
; GFX10-NEXT:    s_addc_u32 s15, s15, call_without_private_to_flat_addrspacecast@gotpcrel32@hi+12
; GFX10-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; GFX10-NEXT:    s_load_dwordx2 s[18:19], s[14:15], 0x0
; GFX10-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; GFX10-NEXT:    s_mov_b32 s14, s16
; GFX10-NEXT:    v_or3_b32 v31, v0, v1, v2
; GFX10-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-NEXT:    v_mov_b32_e32 v0, s17
; GFX10-NEXT:    s_swappc_b64 s[30:31], s[18:19]
; GFX10-NEXT:    s_endpgm
  call void @call_without_private_to_flat_addrspacecast(ptr addrspace(5) %ptr)
  ret void
}

;; tests of indirect call, intrinsics, inline asm

@gv.fptr0 = external hidden unnamed_addr addrspace(4) constant ptr, align 4

define void @empty() {
; GFX9-LABEL: empty:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX10-LABEL: empty:
; GFX10:       ; %bb.0:
; GFX10-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX10-NEXT:    s_setpc_b64 s[30:31]
  ret void
}

define void @also_empty() {
; GFX9-LABEL: also_empty:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX10-LABEL: also_empty:
; GFX10:       ; %bb.0:
; GFX10-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX10-NEXT:    s_setpc_b64 s[30:31]
  ret void
}

define amdgpu_kernel void @indirect_call_known_callees(i1 %cond) {
; GFX9-LABEL: indirect_call_known_callees:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_add_u32 flat_scratch_lo, s12, s17
; GFX9-NEXT:    s_addc_u32 flat_scratch_hi, s13, 0
; GFX9-NEXT:    s_add_u32 s0, s0, s17
; GFX9-NEXT:    s_addc_u32 s1, s1, 0
; GFX9-NEXT:    s_mov_b32 s13, s15
; GFX9-NEXT:    s_mov_b32 s12, s14
; GFX9-NEXT:    s_load_dword s17, s[8:9], 0x0
; GFX9-NEXT:    s_getpc_b64 s[14:15]
; GFX9-NEXT:    s_add_u32 s14, s14, empty@gotpcrel32@lo+4
; GFX9-NEXT:    s_addc_u32 s15, s15, empty@gotpcrel32@hi+12
; GFX9-NEXT:    s_getpc_b64 s[18:19]
; GFX9-NEXT:    s_add_u32 s18, s18, also_empty@gotpcrel32@lo+4
; GFX9-NEXT:    s_addc_u32 s19, s19, also_empty@gotpcrel32@hi+12
; GFX9-NEXT:    s_load_dwordx2 s[20:21], s[18:19], 0x0
; GFX9-NEXT:    s_load_dwordx2 s[22:23], s[14:15], 0x0
; GFX9-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; GFX9-NEXT:    s_waitcnt lgkmcnt(0)
; GFX9-NEXT:    s_and_b32 s14, 1, s17
; GFX9-NEXT:    s_cmp_eq_u32 s14, 1
; GFX9-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; GFX9-NEXT:    s_cselect_b32 s19, s23, s21
; GFX9-NEXT:    s_cselect_b32 s18, s22, s20
; GFX9-NEXT:    s_add_u32 s8, s8, 8
; GFX9-NEXT:    s_addc_u32 s9, s9, 0
; GFX9-NEXT:    v_or3_b32 v31, v0, v1, v2
; GFX9-NEXT:    s_mov_b32 s14, s16
; GFX9-NEXT:    s_mov_b32 s32, 0
; GFX9-NEXT:    s_swappc_b64 s[30:31], s[18:19]
; GFX9-NEXT:    s_endpgm
;
; GFX10-LABEL: indirect_call_known_callees:
; GFX10:       ; %bb.0:
; GFX10-NEXT:    s_add_u32 s12, s12, s17
; GFX10-NEXT:    s_mov_b32 s32, 0
; GFX10-NEXT:    s_addc_u32 s13, s13, 0
; GFX10-NEXT:    s_setreg_b32 hwreg(HW_REG_FLAT_SCR_LO), s12
; GFX10-NEXT:    s_setreg_b32 hwreg(HW_REG_FLAT_SCR_HI), s13
; GFX10-NEXT:    s_add_u32 s0, s0, s17
; GFX10-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-NEXT:    s_mov_b32 s13, s15
; GFX10-NEXT:    s_mov_b32 s12, s14
; GFX10-NEXT:    s_getpc_b64 s[14:15]
; GFX10-NEXT:    s_add_u32 s14, s14, also_empty@gotpcrel32@lo+4
; GFX10-NEXT:    s_addc_u32 s15, s15, also_empty@gotpcrel32@hi+12
; GFX10-NEXT:    s_getpc_b64 s[18:19]
; GFX10-NEXT:    s_add_u32 s18, s18, empty@gotpcrel32@lo+4
; GFX10-NEXT:    s_addc_u32 s19, s19, empty@gotpcrel32@hi+12
; GFX10-NEXT:    s_load_dword s17, s[8:9], 0x0
; GFX10-NEXT:    s_load_dwordx2 s[20:21], s[14:15], 0x0
; GFX10-NEXT:    s_load_dwordx2 s[22:23], s[18:19], 0x0
; GFX10-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; GFX10-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; GFX10-NEXT:    v_or3_b32 v31, v0, v1, v2
; GFX10-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-NEXT:    s_and_b32 s14, 1, s17
; GFX10-NEXT:    s_cmp_eq_u32 s14, 1
; GFX10-NEXT:    s_mov_b32 s14, s16
; GFX10-NEXT:    s_cselect_b32 s19, s23, s21
; GFX10-NEXT:    s_cselect_b32 s18, s22, s20
; GFX10-NEXT:    s_add_u32 s8, s8, 8
; GFX10-NEXT:    s_addc_u32 s9, s9, 0
; GFX10-NEXT:    s_swappc_b64 s[30:31], s[18:19]
; GFX10-NEXT:    s_endpgm
  %fptr = select i1 %cond, ptr @empty, ptr @also_empty
  call void %fptr()
  ret void
}

declare i32 @llvm.amdgcn.workgroup.id.x()

define void @use_intrinsic_workitem_id_x() {
; GFX9-LABEL: use_intrinsic_workitem_id_x:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v0, 0
; GFX9-NEXT:    v_mov_b32_e32 v1, 0
; GFX9-NEXT:    v_and_b32_e32 v2, 0x3ff, v31
; GFX9-NEXT:    global_store_dword v[0:1], v2, off
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX10-LABEL: use_intrinsic_workitem_id_x:
; GFX10:       ; %bb.0:
; GFX10-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX10-NEXT:    v_mov_b32_e32 v0, 0
; GFX10-NEXT:    v_mov_b32_e32 v1, 0
; GFX10-NEXT:    v_and_b32_e32 v2, 0x3ff, v31
; GFX10-NEXT:    global_store_dword v[0:1], v2, off
; GFX10-NEXT:    s_waitcnt_vscnt null, 0x0
; GFX10-NEXT:    s_setpc_b64 s[30:31]
  %val = call i32 @llvm.amdgcn.workitem.id.x()
  store volatile i32 %val, ptr addrspace(1) null
  ret void
}

define amdgpu_kernel void @use_intrinsic_workitem_id_x_cc_kernel() {
; GFX9-LABEL: use_intrinsic_workitem_id_x_cc_kernel:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    v_mov_b32_e32 v1, 0
; GFX9-NEXT:    v_mov_b32_e32 v2, 0
; GFX9-NEXT:    global_store_dword v[1:2], v0, off
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    s_endpgm
;
; GFX10-LABEL: use_intrinsic_workitem_id_x_cc_kernel:
; GFX10:       ; %bb.0:
; GFX10-NEXT:    v_mov_b32_e32 v1, 0
; GFX10-NEXT:    v_mov_b32_e32 v2, 0
; GFX10-NEXT:    global_store_dword v[1:2], v0, off
; GFX10-NEXT:    s_waitcnt_vscnt null, 0x0
; GFX10-NEXT:    s_endpgm
  %val = call i32 @llvm.amdgcn.workitem.id.x()
  store volatile i32 %val, ptr addrspace(1) null
  ret void
}

define void @call_use_intrinsic_workitem_id_x() {
; GFX9-LABEL: call_use_intrinsic_workitem_id_x:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    s_mov_b32 s18, s33
; GFX9-NEXT:    s_mov_b32 s33, s32
; GFX9-NEXT:    s_xor_saveexec_b64 s[16:17], -1
; GFX9-NEXT:    buffer_store_dword v3, off, s[0:3], s33 ; 4-byte Folded Spill
; GFX9-NEXT:    s_mov_b64 exec, s[16:17]
; GFX9-NEXT:    s_addk_i32 s32, 0x400
; GFX9-NEXT:    s_getpc_b64 s[16:17]
; GFX9-NEXT:    s_add_u32 s16, s16, use_intrinsic_workitem_id_x@gotpcrel32@lo+4
; GFX9-NEXT:    s_addc_u32 s17, s17, use_intrinsic_workitem_id_x@gotpcrel32@hi+12
; GFX9-NEXT:    s_load_dwordx2 s[16:17], s[16:17], 0x0
; GFX9-NEXT:    v_writelane_b32 v3, s30, 0
; GFX9-NEXT:    v_writelane_b32 v3, s31, 1
; GFX9-NEXT:    s_waitcnt lgkmcnt(0)
; GFX9-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; GFX9-NEXT:    v_readlane_b32 s31, v3, 1
; GFX9-NEXT:    v_readlane_b32 s30, v3, 0
; GFX9-NEXT:    s_mov_b32 s32, s33
; GFX9-NEXT:    s_xor_saveexec_b64 s[4:5], -1
; GFX9-NEXT:    buffer_load_dword v3, off, s[0:3], s33 ; 4-byte Folded Reload
; GFX9-NEXT:    s_mov_b64 exec, s[4:5]
; GFX9-NEXT:    s_mov_b32 s33, s18
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX10-LABEL: call_use_intrinsic_workitem_id_x:
; GFX10:       ; %bb.0:
; GFX10-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX10-NEXT:    s_mov_b32 s18, s33
; GFX10-NEXT:    s_mov_b32 s33, s32
; GFX10-NEXT:    s_xor_saveexec_b32 s16, -1
; GFX10-NEXT:    buffer_store_dword v3, off, s[0:3], s33 ; 4-byte Folded Spill
; GFX10-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-NEXT:    s_mov_b32 exec_lo, s16
; GFX10-NEXT:    s_addk_i32 s32, 0x200
; GFX10-NEXT:    s_getpc_b64 s[16:17]
; GFX10-NEXT:    s_add_u32 s16, s16, use_intrinsic_workitem_id_x@gotpcrel32@lo+4
; GFX10-NEXT:    s_addc_u32 s17, s17, use_intrinsic_workitem_id_x@gotpcrel32@hi+12
; GFX10-NEXT:    v_writelane_b32 v3, s30, 0
; GFX10-NEXT:    s_load_dwordx2 s[16:17], s[16:17], 0x0
; GFX10-NEXT:    v_writelane_b32 v3, s31, 1
; GFX10-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; GFX10-NEXT:    v_readlane_b32 s31, v3, 1
; GFX10-NEXT:    v_readlane_b32 s30, v3, 0
; GFX10-NEXT:    s_mov_b32 s32, s33
; GFX10-NEXT:    s_xor_saveexec_b32 s4, -1
; GFX10-NEXT:    buffer_load_dword v3, off, s[0:3], s33 ; 4-byte Folded Reload
; GFX10-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-NEXT:    s_mov_b32 exec_lo, s4
; GFX10-NEXT:    s_mov_b32 s33, s18
; GFX10-NEXT:    s_waitcnt vmcnt(0)
; GFX10-NEXT:    s_setpc_b64 s[30:31]
  call void @use_intrinsic_workitem_id_x()
  ret void
}

define amdgpu_kernel void @call_use_intrinsic_workitem_id_x_cc_kernel() {
; GFX9-LABEL: call_use_intrinsic_workitem_id_x_cc_kernel:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_add_u32 flat_scratch_lo, s12, s17
; GFX9-NEXT:    s_addc_u32 flat_scratch_hi, s13, 0
; GFX9-NEXT:    s_add_u32 s0, s0, s17
; GFX9-NEXT:    s_addc_u32 s1, s1, 0
; GFX9-NEXT:    s_mov_b32 s13, s15
; GFX9-NEXT:    s_mov_b32 s12, s14
; GFX9-NEXT:    s_getpc_b64 s[14:15]
; GFX9-NEXT:    s_add_u32 s14, s14, use_intrinsic_workitem_id_x@gotpcrel32@lo+4
; GFX9-NEXT:    s_addc_u32 s15, s15, use_intrinsic_workitem_id_x@gotpcrel32@hi+12
; GFX9-NEXT:    s_load_dwordx2 s[18:19], s[14:15], 0x0
; GFX9-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; GFX9-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; GFX9-NEXT:    v_or3_b32 v31, v0, v1, v2
; GFX9-NEXT:    s_mov_b32 s14, s16
; GFX9-NEXT:    s_mov_b32 s32, 0
; GFX9-NEXT:    s_waitcnt lgkmcnt(0)
; GFX9-NEXT:    s_swappc_b64 s[30:31], s[18:19]
; GFX9-NEXT:    s_endpgm
;
; GFX10-LABEL: call_use_intrinsic_workitem_id_x_cc_kernel:
; GFX10:       ; %bb.0:
; GFX10-NEXT:    s_add_u32 s12, s12, s17
; GFX10-NEXT:    s_mov_b32 s32, 0
; GFX10-NEXT:    s_addc_u32 s13, s13, 0
; GFX10-NEXT:    s_setreg_b32 hwreg(HW_REG_FLAT_SCR_LO), s12
; GFX10-NEXT:    s_setreg_b32 hwreg(HW_REG_FLAT_SCR_HI), s13
; GFX10-NEXT:    s_add_u32 s0, s0, s17
; GFX10-NEXT:    s_addc_u32 s1, s1, 0
; GFX10-NEXT:    s_mov_b32 s13, s15
; GFX10-NEXT:    s_mov_b32 s12, s14
; GFX10-NEXT:    s_getpc_b64 s[14:15]
; GFX10-NEXT:    s_add_u32 s14, s14, use_intrinsic_workitem_id_x@gotpcrel32@lo+4
; GFX10-NEXT:    s_addc_u32 s15, s15, use_intrinsic_workitem_id_x@gotpcrel32@hi+12
; GFX10-NEXT:    v_lshlrev_b32_e32 v2, 20, v2
; GFX10-NEXT:    s_load_dwordx2 s[18:19], s[14:15], 0x0
; GFX10-NEXT:    v_lshlrev_b32_e32 v1, 10, v1
; GFX10-NEXT:    s_mov_b32 s14, s16
; GFX10-NEXT:    v_or3_b32 v31, v0, v1, v2
; GFX10-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-NEXT:    s_swappc_b64 s[30:31], s[18:19]
; GFX10-NEXT:    s_endpgm
  call void @use_intrinsic_workitem_id_x()
  ret void
}
